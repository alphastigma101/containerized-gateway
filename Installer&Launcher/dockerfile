FROM golang:latest as builder

# Install necessary tools for cross-compilation
RUN apt-get update && apt-get install -y \
    gcc-mingw-w64-x86-64 \
    gcc-mingw-w64-i686 \
    gcc-aarch64-linux-gnu \
    gcc-arm-linux-gnueabihf

ENV GOPROXY=https://proxy.golang.org


# Create a directory for the project
WORKDIR /app

COPY go.mod go.sum ./

# Download all dependencies
RUN go mod download

# Copy the project files
COPY . .

# Set environment variables for cross-compilation
# Build for Windows (64-bit)
RUN CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc go build -o installer-windows-amd64.exe installer.go
# Build for macOS (64-bit)
RUN CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -o installer-darwin-amd64 installer.go
# Build for Linux (64-bit)
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o installer-linux-amd64 installer.go

# Final image
FROM scratch as final
COPY --from=builder /app/installer-windows-amd64.exe /installer-windows-amd64.exe
COPY --from=builder /app/installer-darwin-amd64 /installer-darwin-amd64
COPY --from=builder /app/installer-linux-amd64 /installer-linux-amd64